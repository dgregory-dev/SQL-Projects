'SQL for Customers:'
CREATE TABLE Customers (
    customer_id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name VARCHAR (50) NOT NULL,
    last_name VARCHAR (50) NOT NULL,
    email VARCHAR (100) NOT NULL UNIQUE
    );

'SQL for Products:'
CREATE TABLE Products (
    product_id INTEGER PRIMARY KEY AUTOINCREMENT,
    product_name VARCHAR (50) NOT NULL,
    category VARCHAR (50) NOT NULL,
    price DEC (4,2) NOT NULL,
    quantity INTEGER NOT NULL
    );

'SQL for Feedback:'
CREATE TABLE Feedback (
   	feedback_id INTEGER PRIMARY KEY AUTOINCREMENT,
    customer_id INTEGER NOT NULL,
    product_id INTEGER NOT NULL,
    feedback_text TEXT,
    rating INTEGER CHECK (rating >=1 AND rating <=5) NOT NULL,
    feedback_date TEXT NOT NULL,
    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id),
    FOREIGN KEY (product_id) REFERENCES Products (product_id)
    );


'SQL for OrderItems:'
CREATE TABLE OrderItems (
    order_id INTEGER,
    product_id INTEGER,
    quantity INTEGER NOT NULL,
    order_date TEXT NOT NULL,
    PRIMARY KEY (order_id, product_id),
    FOREIGN KEY (order_id) REFERENCES Orders (order_id),
    FOREIGN KEY (product_id) REFERENCES Products (product_id)
    );




'SQL for Orders:'
CREATE TABLE Orders (
    customer_id INTEGER NOT NULL,
	order_id INTEGER NOT NULL,
 	order_date TEXT NOT NULL,
    PRIMARY KEY (customer_id, order_id),
    FOREIGN KEY (order_id) REFERENCES Orders (order_id),
    FOREIGN KEY (customer_id) REFERENCES Customers (customer_id)
    );

'SQL query for updating price of a specific product:'
UPDATE Products
SET price = price + 25.00
WHERE product_id =  5;

'SQL for retrieving all feedback ratings above 4:'
SELECT customer_id, feedback_text, rating, feedback_date
FROM Feedback
WHERE rating >= 4
ORDER BY rating ASC;

'SQL for Total sales:'
BEGIN TRANSACTION;
CREATE TEMP TABLE InvoicePrice AS
SELECT
oi.order_id,
p.product_name,
p.price,
oi.quantity,
(p.price * oi.quantity) AS total_cost
FROM OrderItems oi
INNER JOIN Products p ON oi.product_id = p.product_id;
SELECT SUM(total_cost)
FROM InvoicePrice;
COMMIT;


'SQL to Create a table and archive orders over a year old'

BEGIN TRANSACTION;
CREATE TABLE ArchivedOrders (
    archived_at DATETIME CURRENT DATE_TIME STAMP,
    order_id INTEGER,
    product_id INTEGER,
    quantity INTEGER NOT NULL,
    order_date TEXT NOT NULL,
    PRIMARY KEY (archived_at, order_id, product_id),
    FOREIGN KEY (order_id) REFERENCES Orders (order_id),
    FOREIGN KEY (product_id) REFERENCES Products (product_id)
);


INSERT INTO ArchivedOrders (archived_at, order_id, product_id, quantity, order_date)
SELECT
    CURRENT_TIMESTAMP,
    order_id,
    product_id,
    quantity,
    order_date
FROM OrderItems
WHERE order_date < DATE(CURRENT_DATE, '-1 year');
DELETE FROM OrderItems
WHERE order_date < DATE(CURRENT_DATE, '-1 year');
COMMIT;
â€ƒ
'Populate Customers Table'
INSERT INTO Customers (first_name, last_name, email) 
VALUES 
    ('John', 'Doe', 'john.doe@example.com'), 
    ('Jane', 'Smith', 'jane.smith@example.com'),
    ('Bob', 'Johnson', 'bob.johnson@example.com'), 
    ('Emily', 'Davis', 'emily.davis@example.com'),
    ('Michael', 'Wilson', 'michael.wilson@example.com'), 
    ('Jessica', 'Brown', 'jessica.brown@example.com'), 
    ('David', 'Lee', 'david.lee@example.com'),
    ('Sarah', 'Taylor', 'sarah.taylor@example.com'), 
    ('William', 'Anderson', 'william.anderson@example.com'), 
    ('Olivia', 'Thompson', 'olivia.thompson@example.com'),
    ('Daniel', 'Clark', 'daniel.clark@example.com'),
    ('Elizabeth', 'Martinez', 'elizabeth.martinez@example.com'),
    ('Christopher', 'Hernandez', 'christopher.hernandez@example.com'), 
    ('Sophia', 'Diaz', 'sophia.diaz@example.com'),
    ('Matthew', 'Reyes', 'matthew.reyes@example.com'), 
    ('Isabella', 'Morales', 'isabella.morales@example.com'),
    ('Alexander', 'Gutierrez', 'alexander.gutierrez@example.com'),
    ('Ava', 'Ramirez', 'ava.ramirez@example.com'), 
    ('Jacob', 'Castillo', 'jacob.castillo@example.com'),
    ('Emma', 'Rojas', 'emma.rojas@example.com'), 
    ('Benjamin', 'Fuentes', 'benjamin.fuentes@example.com'), 
    ('Abigail', 'Jimenez', 'abigail.jimenez@example.com'),
    ('Andrew', 'Vargas', 'andrew.vargas@example.com'),
    ('Isabella', 'Flores', 'isabella.flores@example.com'),
    ('Joshua', 'Herrera', 'joshua.herrera@example.com');

'Populate products table'
INSERT INTO Products (product_name, category, price, quantity)
    VALUES
    ('Laptop', 'Electronics', 999.99, 50),
    ('T-Shirt', 'Clothing', 19.99, 100),
    ('Bicycle', 'Sports', 499.99, 25),
    ('Book', 'Books', 14.99, 75),
    ('Smartphone', 'Electronics', 799.99, 30),
    ('Jeans', 'Clothing', 49.99, 80),
    ('Basketball', 'Sports', 29.99, 40),
    ('Notebook', 'Office', 9.99, 120),
    ('Headphones', 'Electronics', 59.99, 60),
    ('Hoodie', 'Clothing', 39.99, 90),
    ('Soccer Ball', 'Sports', 39.99, 35),
    ('Backpack', 'Accessories', 29.99, 55),
    ('Tablet', 'Electronics', 499.99, 20),
    ('Sunglasses', 'Accessories', 24.99, 70),
    ('Sketchpad', 'Office', 7.99, 100),
    ('Water Bottle', 'Sports', 12.99, 80),
    ('Sweater', 'Clothing', 29.99, 60),
    ('Mouse', 'Electronics', 19.99, 90),
    ('Gym Shorts', 'Clothing', 24.99, 75),
    ('Desk Lamp', 'Office', 19.99, 45),
    ('Running Shoes', 'Sports', 79.99, 40),
    ('Diary', 'Office', 14.99, 65),
    ('Wireless Charger', 'Electronics', 39.99, 50),
    ('Yoga Mat', 'Sports', 29.99, 30),
    ('Briefcase', 'Accessories', 59.99, 35);

'Populate Feedback table'
INSERT INTO Feedback (customer_id, product_id, feedback_text, rating, feedback_date)
    VALUES
    (1, 1, 'Great laptop, highly recommended!', 5, '2023-04-15'),
    (2, 2, 'The t-shirt is good quality and fits well.', 4, '2023-05-20'),
    (3, 3, 'The bicycle is a bit expensive but works great.', 4, '2023-06-01'),
    (4, 4, 'The book was an interesting read.', 5, '2023-06-10'),
    (5, 5, 'The smartphone has great camera quality.', 4, '2023-07-01'),
    (1, 2, 'The t-shirt is comfortable to wear.', 4, '2023-07-15'),
    (2, 3, 'The bicycle is perfect for commuting.', 5, '2023-08-01'),
    (3, 4, 'The book was a bit disappointing.', 3, '2023-08-15'),
    (4, 5, 'The smartphone has good battery life.', 4, '2023-09-01'),
    (5, 1, 'The laptop is fast and reliable.', 5, '2023-09-15'),
    (1, 3, 'The bicycle is a joy to ride.', 5, '2023-10-01'),
    (2, 4, 'The book was a great read.', 4, '2023-10-15'),
    (3, 5, 'The smartphone is easy to use.', 4, '2023-11-01'),
    (4, 1, 'The laptop is worth the investment.', 5, '2023-11-15'),
    (5, 2, 'The t-shirt is well-made.', 4, '2023-12-01'),
    (1, 4, 'The book was informative.', 4, '2023-12-15'),
    (2, 5, 'The smartphone has a beautiful display.', 5, '2024-01-01'),
    (3, 1, 'The laptop is perfect for work.', 5, '2024-01-15'),
    (4, 2, 'The t-shirt is my new favorite.', 5, '2024-02-01'),
    (5, 3, 'The bicycle is well-designed.', 4, '2024-02-15'),
    (1, 5, 'The smartphone has great features.', 4, '2024-03-01'),
    (2, 1, 'The laptop is fast and efficient.', 5, '2024-03-15'),
    (3, 2, 'The t-shirt is of high quality.', 4, '2024-04-01'),
    (4, 3, 'The bicycle is a great purchase.', 5, '2024-04-15'),
    (5, 4, 'The book was an enjoyable read.', 4, '2024-05-01');

'Populate order table'
INSERT INTO Orders (order_id, customer_id, order_date)
    VALUES
    (1, 1, '2023-04-20'),
    (2, 2, '2023-05-15'),
    (3, 3, '2023-06-10'),
    (4, 4, '2023-07-01'),
    (5, 5, '2023-07-20'),
    (6, 1, '2023-08-05'),
    (7, 2, '2023-08-25'),
    (8, 3, '2023-09-12'),
    (9, 4, '2023-09-30'),
    (10, 5, '2023-10-18'),
    (11, 1, '2023-11-02'),
    (12, 2, '2023-11-20'),
    (13, 3, '2023-12-08'),
    (14, 4, '2023-12-24'),
    (15, 5, '2024-01-05'),
    (16, 1, '2024-01-22'),
    (17, 2, '2024-02-10'),
    (18, 3, '2024-02-28'),
    (19, 4, '2024-03-18'),
    (20, 5, '2024-04-05'),
    (21, 1, '2024-04-23'),
    (22, 2, '2024-05-11'),
    (23, 3, '2024-05-29'),
    (24, 4, '2024-06-16'),
    (25, 5, '2024-07-04');

'Populate OrderItems table'
INSERT INTO OrderItems (order_id, product_id, quantity, order_date)
    VALUES
    (1, 1, 1, '2023-04-20'),
    (1, 2, 2, '2023-04-20'),
    (2, 3, 1, '2023-05-15'),
    (2, 4, 1, '2023-05-15'),
    (3, 5, 1, '2023-06-10'),
    (3, 2, 1, '2023-06-10'),
    (4, 1, 2, '2023-07-01'),
    (4, 3, 1, '2023-07-01'),
    (5, 5, 1, '2023-07-20'),
    (5, 4, 1, '2023-07-20'),
    (6, 1, 1, '2023-08-05'),
    (6, 2, 1, '2023-08-05'),
    (7, 3, 1, '2023-08-25'),
    (7, 4, 2, '2023-08-25'),
    (8, 5, 1, '2023-09-12'),
    (8, 1, 1, '2023-09-12'),
    (9, 2, 2, '2023-09-30'),
    (9, 3, 1, '2023-09-30'),
    (10, 4, 1, '2023-10-18'),
    (10, 5, 1, '2023-10-18'),
    (11, 1, 1, '2023-11-02'),
    (11, 2, 1, '2023-11-02'),
    (12, 3, 2, '2023-11-20'),
    (12, 4, 1, '2023-11-20'),
    (13, 5, 1, '2023-12-08');



